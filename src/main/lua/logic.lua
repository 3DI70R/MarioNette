---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Three.
--- DateTime: 10.05.2018 10:40
---

local neural = require("neural")
local environment = require("environment_mario1")

local logic = {}

local emptyEventHandler = {
    onProgressUpdate = function() end;
}

local eventHandler = emptyEventHandler
local pendingNetworkList = {}
local networkEvaluationResults = {}
local network = nil
local frameCounter = 0

function logic.addNetworks(networks)
    for i, n in pairs(networks) do
        table.insert(pendingNetworkList, n)
    end
end

function switchToNextNetwork()
    if #pendingNetworkList > 0 then
        local networkDefinition = pendingNetworkList[1]
        table.remove(pendingNetworkList, 1)
        network = neural.createNetwork(networkDefinition)
    end
end

function storeEvaluationResult(result)
    table.insert(networkEvaluationResults, result)
end

function onEvaluationFinished()

end

function logic.simulateFrame()

    if network then
        environment.onNewFrame(frameCounter)
        local state = environment.getEvaluationState(frameCounter)

        if state.isRunFinished then
            onEvaluationFinished(state)
        else
            local inputs = environment.getInputs()
            local outputs = network:evaluate(inputs)

            environment.mapOutputs(outputs)
        end
    end

    emu.frameadvance()

end

return logic
